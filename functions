#!/usr/bin/env bash

# Create a new directory and enter it
mkd () { mkdir -p "$@" && cd "$_" || exit; }

# Use bat to format help output
help () { "$@" --help 2>&1 | bat --plain --language=help --paging=never; }

# base64 encode / decode
encode-base64 () { echo "$1" | base64; }
decode-base64 () { echo "$1" | base64 --decode; }

# Create a data URL from a file
dataurl () {
	local mimeType;
	mimeType=$(file -b --mime-type "$1");
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8";
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# IP addresses
localip () { ifconfig en0 | grep inet | awk '$1=="inet" {print $2}'; }
publicip-v4 () { dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com; }
publicip-v6 () { dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com; }
publicip () {
	echo "Public IPv4: $( publicip-v4 )";
	echo "Public IPv6: $( publicip-v6 )";
}

qr () {
	local input="$*"
	[ -z "$input" ] && local input="@/dev/stdin"
	curl -d "$input" https://qrcode.show
}

qr-svg () {
	local input="$*"
	[ -z "$input" ] && local input="@/dev/stdin"
	curl -d "${input}" https://qrcode.show -H "Accept: image/svg+xml"
}

aws-info () {
	aws iam list-account-aliases | jq -r '."AccountAliases" | join(",")'
	aws sts get-caller-identity | jq .
}
