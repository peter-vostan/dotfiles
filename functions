#!/usr/bin/env bash

mkd () { mkdir -p "$@" && cd "$_" || exit; }

help () { "$@" --help 2>&1 | bat --plain --language=help --paging=never; }

batgrep () {
	rg --line-number --no-heading --color=always --smart-case "$@" |
		fzf -d ':' -n 2.. --ansi --no-sort \
			--preview-window="up,60%,border-bottom,+{2}+3/3" \
			--preview 'bat --style=numbers --color=always --highlight-line {2} {1}';
}

ssh-kitty-terminfo () { infocmp -a xterm-kitty | ssh "$@" tic -x -o \~/.terminfo /dev/stdin; }

# base64 encode / decode
encode-base64 () { echo "$1" | base64; }
decode-base64 () { echo "$1" | base64 --decode; }

# Create a data URL from a file
dataurl () {
	local mimeType;
	mimeType=$(file -b --mime-type "$1");
	if [[ $mimeType == text/* ]]; then
		mimeType="${mimeType};charset=utf-8";
	fi
	echo "data:${mimeType};base64,$(openssl base64 -in "$1" | tr -d '\n')";
}

# IP addresses
localip () { ifconfig en0 | grep inet | awk '$1=="inet" {print $2}'; }
publicip-v4 () { dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com; }
publicip-v6 () { dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com; }
publicip () {
	echo "Public IPv4: $( publicip-v4 )";
	echo "Public IPv6: $( publicip-v6 )";
}

qr () {
	local input="$*"
	[ -z "$input" ] && local input="@/dev/stdin"
	curl -d "$input" https://qrcode.show
}

qr-svg () {
	local input="$*"
	[ -z "$input" ] && local input="@/dev/stdin"
	curl -d "${input}" https://qrcode.show -H "Accept: image/svg+xml"
}

aws-info () {
	aws iam list-account-aliases | jq -r '."AccountAliases" | join(",")'
	aws sts get-caller-identity | jq .
}

# Copied and modified from https://gist.github.com/SheldonWangRJT/8d3f44a35c8d1386a396b9b49b43c385
# Usage: v2g my-vid.mov
#        v2g my-vid.mov --target my-gif.gif --resolution 800x400 --fps 10
v2g () {
	local src="$1";
	local target="${1%.*}.gif";
	local resolution=""; # eg. 800x400 (defaults to source video resolution)
	local fps=10;

	while [ $# -gt 0 ]; do
        if [[ $1 == *"--"* ]]; then
			param="${1/--/}";
			declare "$param"="$2";
        fi
        shift
    done

	[[ -n $fps ]] && fps="-r $fps";
    [[ -n $resolution ]] && resolution="-s $resolution";

	local cmd2run="ffmpeg -i '$src' -pix_fmt rgb8 $fps $resolution '$target' && gifsicle -O3 '$target' -o '$target'";
	echo "Running: $ $cmd2run";
	echo ""
	eval "$cmd2run";
	echo ""
	echo "'$src' successfully converted and saved as '$target'";
}
